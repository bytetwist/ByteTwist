plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.3.70'
    id 'org.jetbrains.dokka' version '0.10.1'
    id 'jacoco'
    id 'java-library'
    id 'maven-publish'
    id 'com.jfrog.bintray' version '1.8.4'
}

group 'org.bytetwist'
version '0.4'

repositories {
    mavenCentral()
    jcenter()
    mavenLocal()
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
            artifact kotlinSourcesJar
            groupId = group
            artifactId = 'ByteTwist'
            version = version
        }
    }
    repositories {
        maven {
            url = "https://dl.bintray.com/bytetwist/ByteTwist/"
        }
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.4'
    implementation 'org.jgrapht:jgrapht:1.4.0'
    implementation 'org.jgrapht:jgrapht-core:1.4.0'
    implementation 'org.jgrapht:jgrapht-io:1.4.0'
    implementation 'org.jgrapht:jgrapht-guava:1.4.0'
    implementation 'org.jgrapht:jgrapht-ext:1.4.0'
    api 'org.ow2.asm:asm:7.3.1'
    api 'org.ow2.asm:asm-commons:8.0.1'
    api 'org.ow2.asm:asm-tree:7.3.1'
    api 'org.ow2.asm:asm-analysis:7.3.1'
    api 'com.google.guava:guava:28.2-jre'
    implementation 'io.github.microutils:kotlin-logging:1.7.9'
    implementation 'org.slf4j:slf4j-simple:1.7.30'
    implementation 'org.jetbrains.kotlin:kotlin-reflect:1.3.70'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.6.0-M1'
    testImplementation 'org.jetbrains.kotlin:kotlin-test-common:1.3.70'
    testImplementation 'org.jetbrains.kotlin:kotlin-test:1.3.70'
    testImplementation 'org.jetbrains.kotlin:kotlin-test-junit:1.4.21-2'
}



compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

dokka {
    outputFormat = 'html'
    outputDirectory = "docs"
    setDocsDirName("docs")
}

jacoco {
    toolVersion = "0.8.5"
    reportsDir = file(".jacoco")
}

jacocoTestReport {
    reports {
        xml.enabled true
    }
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: 'org/bytetwist/bytetwist/processors/common**')
        }))
    }

}

tasks.create("moveTestClasses") {
    dependsOn(tasks.compileTestJava)
    copy {
        from "build/classes/java/test"
        into "src/test/resources"
    }
}

tasks.build {
    dependsOn(tasks.getByName("moveTestClasses"))
    doLast {
        tasks.jacocoTestReport
    }
}

test {
    dependsOn(tasks.getByName("moveTestClasses"))
    useJUnitPlatform()
    testLogging {
        //showStandardStreams = true
        events "passed", "skipped", "failed"
    }
}

bintray {
    user = 'bytetwist'
    //key = new File("src/main/resources/bintrayPublishingKey").text ?: ""
    publications = ['maven']
    pkg {
        repo = 'ByteTwist'
        name = 'bytetwist'
        version {
            name = "0.4"
        }
    }
}
