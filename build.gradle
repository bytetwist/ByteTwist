plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.3.61'
    id 'org.jetbrains.dokka' version '0.10.0'
    id 'jacoco'
}

group 'org.bytetwist'
version '0.2'

repositories {
    mavenCentral()
    jcenter()
    maven {
        url = "https://dl.bintray.com/vorpal-research/kotlin-maven"

    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.3'
    api 'org.jetbrains.research:kfg:0.0.6-1'
    api 'org.ow2.asm:asm:7.3'
    api 'org.ow2.asm:asm-commons:7.3'
    api 'org.ow2.asm:asm-tree:7.3'
    api 'org.ow2.asm:asm-analysis:7.3'
    api 'com.google.guava:guava:28.1-jre'
    implementation 'io.github.microutils:kotlin-logging:1.7.8'
    implementation 'org.slf4j:slf4j-simple:1.7.30'
    implementation 'org.jetbrains.kotlin:kotlin-reflect:1.3.61'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.6.0-M1'
    testImplementation 'org.jetbrains.kotlin:kotlin-test-common:1.3.61'
    testImplementation 'org.jetbrains.kotlin:kotlin-test:1.3.61'
    testImplementation 'org.jetbrains.kotlin:kotlin-test-junit:1.3.61'
}



compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

dokka {
    outputFormat = 'html'
    outputDirectory = "docs"
    setDocsDirName("docs")
}

jacoco {
    toolVersion = "0.8.5"
    reportsDir = file(".jacoco")
}

jacocoTestReport {
    reports {
        xml.enabled true
    }
}

tasks.create("moveTestClasses") {
    dependsOn(tasks.compileTestJava)
    copy {
        from "build/classes/java/test"
        into "src/test/resources"
    }
}

tasks.build {
    dependsOn(tasks.getByName("moveTestClasses"))
    doLast {
        tasks.jacocoTestReport
    }
}

test {
    dependsOn(tasks.getByName("moveTestClasses"))
    useJUnitPlatform()
    testLogging {
        //showStandardStreams = true
        events "passed", "skipped", "failed"
    }
}
